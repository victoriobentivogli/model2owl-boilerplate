name: Publish ReSpec to GitHub Pages

on:
  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write


concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare ReSpec documentation for Pages
        run: |
          # Define available implementations
          AVAILABLE_IMPLEMENTATIONS=(demo_ontology demo_ontology_module)
          
          # Create a temporary directory for Pages content
          mkdir -p _site
          
          # Track found implementations
          FOUND_IMPLEMENTATIONS=()
          
          # Copy ReSpec documentation for each implementation
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            if [ -d "implementation/$implementation/respec" ]; then
              echo "Found ReSpec documentation for $implementation, copying to _site..."
              mkdir -p "_site/$implementation"
              cp -r "implementation/$implementation/respec/"* "_site/$implementation/"
              
              
              FOUND_IMPLEMENTATIONS+=("$implementation")
            else
              echo "No ReSpec documentation found for $implementation"
            fi
          done
          
          # Create dynamic landing page
          echo "Creating dynamic landing page..."
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Ontology Documentation</title>
              <style>
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
                      margin: 0; 
                      padding: 40px; 
                      background-color: #f8f9fa;
                      line-height: 1.6;
                  }
                  .container { 
                      max-width: 1000px; 
                      margin: 0 auto; 
                      background: white;
                      border-radius: 8px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      padding: 40px;
                  }
                  h1 { 
                      color: #2c3e50; 
                      text-align: center;
                      margin-bottom: 40px;
                      font-size: 2.5em;
                  }
                  .implementations-grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                      gap: 20px;
                      margin-top: 30px;
                  }
                  .card { 
                      border: 1px solid #e1e8ed; 
                      padding: 25px; 
                      border-radius: 8px; 
                      background: #fff;
                      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
                      transition: transform 0.2s, box-shadow 0.2s;
                  }
                  .card:hover {
                      transform: translateY(-2px);
                      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                  }
                  .card h2 {
                      color: #34495e;
                      margin-top: 0;
                      font-size: 1.4em;
                  }
                  .card p {
                      color: #7f8c8d;
                      margin-bottom: 20px;
                  }
                  a { 
                      color: #3498db; 
                      text-decoration: none; 
                      font-weight: 500;
                      display: inline-block;
                      padding: 10px 20px;
                      background: #ecf0f1;
                      border-radius: 5px;
                      transition: background-color 0.2s;
                  }
                  a:hover { 
                      background: #3498db;
                      color: white;
                  }
                  .no-docs {
                      text-align: center;
                      color: #95a5a6;
                      font-style: italic;
                      padding: 40px;
                  }
                  .implementation-name {
                      text-transform: capitalize;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Ontology Documentation</h1>
          EOF
          
          # Add cards for each found implementation
          if [ ${#FOUND_IMPLEMENTATIONS[@]} -gt 0 ]; then
            echo '        <div class="implementations-grid">' >> _site/index.html
            for implementation in "${FOUND_IMPLEMENTATIONS[@]}"
            do
              # Convert implementation name to readable format
              readable_name=$(echo "$implementation" | sed 's/_/ /g' | sed 's/\b\w/\U&/g')
              
              cat >> _site/index.html << EOF
                  <div class="card">
                      <h2 class="implementation-name">$readable_name</h2>
                      <p>Complete ReSpec documentation including semantic artifacts (OWL, SHACL, JSON-LD context files).</p>
                      <a href="./$implementation/">View Documentation â†’</a>
                  </div>
          EOF
            done
            echo '        </div>' >> _site/index.html
          else
            cat >> _site/index.html << 'EOF'
                  <div class="no-docs">
                      <h2>Documentation Not Available</h2>
                      <p>No ReSpec documentation has been generated yet.</p>
                      <p>Please run the transformation workflow first to generate the documentation.</p>
                  </div>
          EOF
          fi
          
          # Close HTML
          cat >> _site/index.html << 'EOF'
              </div>
          </body>
          </html>
          EOF
          
    
          echo "Found implementations: ${FOUND_IMPLEMENTATIONS[*]}"
          find _site -type f -name "*.html" | head -10

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
