name: transform UML model
on:
  push:
    branches:
      - "**"
    paths:
      - "implementation/demo_ontology/xmi_conceptual_model/demo_ontology_CM.xml"
      - "implementation/demo_ontology_module/xmi_conceptual_model/demo_ontology_module_CM.xml"
jobs:
  report_and_glossary:
    runs-on: ubuntu-latest
    env:
      OUTPUT_GLOSSARY_PATH: glossary/
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: get model2owl
        run: |
          git clone --branch feature/M2O3-104 https://github.com/meaningfy-ws/model2owl.git 
          pwd

      - name: get-saxon
        run: pwd && cd model2owl && make get-saxon


      - name: generate convention report and glossary
        run: |
          AVAILABLE_IMPLEMENTATIONS=(demo_ontology demo_ontology_module)
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            echo "-------------------${implementation}---------------------------------"
            sed -i "s/test\/ePO-default-config/..\/implementation\/${implementation}\/model2owl-config/g" model2owl/config-proxy.xsl
            cat model2owl/config-proxy.xsl


            CM_FILE_NAME=$(echo "${implementation}_CM.xml")
            CM_FILE_PATH=$(echo "implementation/$implementation/xmi_conceptual_model/${CM_FILE_NAME}")
            NS_XML_FILE_PATH="../implementation/${implementation}/model2owl-config/namespaces.xml"

            OUTPUT_CONVENTION_REPORT_PATH=$(echo "implementation/$implementation/conventions_report/")
            OUTPUT_GLOSSARY_FILE_NAME=$(echo "${implementation}_glossary.html")
            ls -la implementation/$implementation/xmi_conceptual_model/
            echo "CM_FILE_PATH is $CM_FILE_PATH"
            echo "NS_XML_FILE_PATH is $NS_XML_FILE_PATH"
            echo "OUTPUT_REPORT_PATH is $OUTPUT_CONVENTION_REPORT_PATH"
            echo "OUTPUT_GLOSSARY_FILE_NAME is $OUTPUT_GLOSSARY_FILE_NAME"

            mkdir -p $OUTPUT_CONVENTION_REPORT_PATH
            rm -f $OUTPUT_CONVENTION_REPORT_PATH*.html || true
            ls -la
            cd model2owl
            ls -la
            make generate-convention-report \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_CONVENTION_REPORT_PATH=../$OUTPUT_CONVENTION_REPORT_PATH \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            make generate-glossary \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_GLOSSARY_PATH=../$OUTPUT_GLOSSARY_PATH \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}

            sed -i "s/..\/implementation\/${implementation}\/model2owl-config/test\/ePO-default-config/g" config-proxy.xsl
            cd ..
          done
        shell: bash

      - name: merge implementations xmi files into one
        run: |
          AVAILABLE_IMPLEMENTATIONS=(demo_ontology demo_ontology_module)
          cd model2owl
          mkdir -p merge-xmis
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            cp ../implementation/$implementation/xmi_conceptual_model/*_CM.xml merge-xmis
          done
          ls merge-xmis

          make merge-xmi FIRST_XMI_TO_BE_MERGED_FILE_PATH=merge-xmis/demo_ontology_CM.xml

          echo "merged XMI file"
          ls output/combined-xmi
        shell: bash

      - name: generate combined glossary from the merged xmi
        run: |
          # get a namespaces file from an arbitrary module
          NS_XML_FILE_PATH=$(realpath $(find . -type f -path './implementation/*/model2owl-config/namespaces.xml' | head -1))
          echo "NS_XML_FILE_PATH is $NS_XML_FILE_PATH"
          cd model2owl
          make generate-glossary \
            XMI_INPUT_FILE_PATH=output/combined-xmi/ontologies-combined.xmi \
            OUTPUT_GLOSSARY_PATH=../$OUTPUT_GLOSSARY_PATH \
            NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}

      - name: remove unnecessary files
        run: |
          sudo rm -rf model2owl
        shell: bash

      - name: commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git pull
          git status

          git add .
          if [ -z "$(git status --porcelain)" ]; then
          echo "::set-output name=push::false"
          else
          git commit -m "Adding convention report and glossary files"
          echo "::set-output name=push::true"
          fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
  transform:
    needs: report_and_glossary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: get model2owl
        run: |
          git clone --branch feature/M2O3-104 https://github.com/meaningfy-ws/model2owl.git 
          pwd

      - name: get-saxon
        run: pwd && cd model2owl && make get-saxon

      - name: get-rdflib
        run: cd model2owl && make create-virtual-env && make get-rdflib

      - name: transform step
        run: |
          AVAILABLE_IMPLEMENTATIONS=(demo_ontology demo_ontology_module)
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            echo "-------------------${implementation} transform---------------------------------"
            sed -i "s/test\/ePO-default-config/..\/implementation\/${implementation}\/model2owl-config/g" model2owl/config-proxy.xsl
            cat model2owl/config-proxy.xsl


            CM_FILE_NAME=$(echo "${implementation}_CM.xml")
            CM_FILE_PATH=$(echo "implementation/$implementation/xmi_conceptual_model/${CM_FILE_NAME}")
            NS_XML_FILE_PATH="../implementation/${implementation}/model2owl-config/namespaces.xml"
            OUTPUT_PATH_OWL=$(echo "implementation/$implementation/owl_ontology/")
            OUTPUT_PATH_SHACL=$(echo "implementation/$implementation/shacl_shapes/")

            ls -la implementation/$implementation/xmi_conceptual_model/
            echo "CM_FILE_PATH is $CM_FILE_PATH"
            echo "NS_XML_FILE_PATH is $NS_XML_FILE_PATH"
            echo "OUTPUT_PATH_OWL is $OUTPUT_PATH_OWL"
            echo "OUTPUT_PATH_SHACL is $OUTPUT_PATH_SHACL"


            cd model2owl
            ls -la
            echo "+++++++++++++++++transform to rdf++++++++++++++++++++++++++++"
            make owl-core \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_OWL \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            make owl-restrictions \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_OWL \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            make shacl \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_SHACL \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}

            echo "+++++++++++++++++transform to turtle++++++++++++++++++++++++++++"
            echo $(ls ../${OUTPUT_PATH_OWL}*.rdf)
            make convert-rdf-to-turtle \
              ONTOLOGY_FOLDER_PATH=../$OUTPUT_PATH_OWL \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}

            echo $(ls ../${OUTPUT_PATH_SHACL}*.rdf)
            make convert-rdf-to-turtle \
              ONTOLOGY_FOLDER_PATH=../$OUTPUT_PATH_SHACL \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            echo "-------------------end transform---------------------------------"

            sed -i "s/..\/implementation\/${implementation}\/model2owl-config/test\/ePO-default-config/g" config-proxy.xsl
            cd ..
          done
        shell: bash

      - name: remove unnecessary files
        run: |
          sudo rm -rf model2owl
        shell: bash

      - name: commit files
        id: commit
        run: |
               git config --local user.email "action@github.com"
               git config --local user.name "github-actions"
               git pull
               git status

               git add .
               if [ -z "$(git status --porcelain)" ]; then
               echo "::set-output name=push::false"
               else
               git commit -m "Adding transformation files"
               echo "::set-output name=push::true"
               fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
  
  generate_jsonld_context:
    needs: transform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: get model2owl
        run: |
          git clone --branch feature/M2O3-104 https://github.com/meaningfy-ws/model2owl.git 
          pwd

      - name: get-saxon
        run: pwd && cd model2owl && make get-saxon

      - name: get-rdflib
        run: cd model2owl && make create-virtual-env && make get-rdflib

      - name: generate JSON-LD context
        run: |
          AVAILABLE_IMPLEMENTATIONS=(demo_ontology demo_ontology_module)
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            echo "-------------------${implementation} JSON-LD context generation---------------------------------"
            sed -i "s/test\/ePO-default-config/..\/implementation\/${implementation}\/model2owl-config/g" model2owl/config-proxy.xsl
            cat model2owl/config-proxy.xsl

            CM_FILE_NAME=$(echo "${implementation}_CM.xml")
            CM_FILE_PATH=$(echo "implementation/$implementation/xmi_conceptual_model/${CM_FILE_NAME}")
            NS_XML_FILE_PATH="../implementation/${implementation}/model2owl-config/namespaces.xml"
            OUTPUT_PATH_JSONLD=$(echo "implementation/$implementation/jsonld_context/")

            ls -la implementation/$implementation/xmi_conceptual_model/
            echo "CM_FILE_PATH is $CM_FILE_PATH"
            echo "NS_XML_FILE_PATH is $NS_XML_FILE_PATH"
            echo "OUTPUT_PATH_JSONLD is $OUTPUT_PATH_JSONLD"

            mkdir -p $OUTPUT_PATH_JSONLD
            cd model2owl
            ls -la
            echo "+++++++++++++++++prepare namespaces for JSON-LD context++++++++++++++++++++++++++++"
            # Generate enriched namespaces first (required for JSON-LD context generation)
            make gen-enriched-ns-file \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            echo "+++++++++++++++++generate JSON-LD context++++++++++++++++++++++++++++"
            make generate-jsonld-context \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_JSONLD \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            echo "-------------------end JSON-LD context generation---------------------------------"

            sed -i "s/..\/implementation\/${implementation}\/model2owl-config/test\/ePO-default-config/g" config-proxy.xsl
            cd ..
          done
        shell: bash

      - name: remove unnecessary files
        run: |
          sudo rm -rf model2owl
        shell: bash

      - name: commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git pull
          git status

          git add .
          if [ -z "$(git status --porcelain)" ]; then
          echo "::set-output name=push::false"
          else
          git commit -m "Adding JSON-LD context files"
          echo "::set-output name=push::true"
          fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
  
  generate_respec:
    needs: generate_jsonld_context
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: get model2owl
        run: |
          git clone --branch feature/M2O3-104 https://github.com/meaningfy-ws/model2owl.git 
          pwd

      - name: get-saxon
        run: pwd && cd model2owl && make get-saxon

      - name: get-rdflib
        run: cd model2owl && make create-virtual-env && make get-rdflib

      - name: get-jinja
        run: cd model2owl && make get-jinja

      - name: get-jq
        run: cd model2owl && make get-jq

      - name: generate ReSpec documentation
        run: |
          AVAILABLE_IMPLEMENTATIONS=(demo_ontology demo_ontology_module)
          for implementation in "${AVAILABLE_IMPLEMENTATIONS[@]}"
          do
            echo "-------------------${implementation} ReSpec generation---------------------------------"
            sed -i "s/test\/ePO-default-config/..\/implementation\/${implementation}\/model2owl-config/g" model2owl/config-proxy.xsl
            cat model2owl/config-proxy.xsl

            CM_FILE_NAME=$(echo "${implementation}_CM.xml")
            CM_FILE_PATH=$(echo "implementation/$implementation/xmi_conceptual_model/${CM_FILE_NAME}")
            NS_XML_FILE_PATH="../implementation/${implementation}/model2owl-config/namespaces.xml"
            OUTPUT_PATH_RESPEC=$(echo "implementation/$implementation/respec/")
            
            # Paths to existing artifacts from previous jobs
            OWL_CORE_PATH=$(echo "implementation/$implementation/owl_ontology/${implementation}_CM.rdf")
            OWL_RESTR_PATH=$(echo "implementation/$implementation/owl_ontology/${implementation}_CM_restrictions.rdf")
            SHACL_SHAPES_PATH=$(echo "implementation/$implementation/shacl_shapes/${implementation}_CM_shapes.rdf")
            JSONLD_CONTEXT_PATH=$(echo "implementation/$implementation/jsonld_context/${implementation}_CM_context.jsonld")
            RESPEC_ASSETS_PATH="../implementation/${implementation}/respec-resources/assets"
            METADATA_JSON_PATH="../implementation/${implementation}/model2owl-config/metadata.json"

            ls -la implementation/$implementation/xmi_conceptual_model/
            echo "CM_FILE_PATH is $CM_FILE_PATH"
            echo "NS_XML_FILE_PATH is $NS_XML_FILE_PATH"
            echo "OUTPUT_PATH_RESPEC is $OUTPUT_PATH_RESPEC"
            echo "OWL_CORE_PATH is $OWL_CORE_PATH"
            echo "OWL_RESTR_PATH is $OWL_RESTR_PATH"
            echo "SHACL_SHAPES_PATH is $SHACL_SHAPES_PATH"
            echo "JSONLD_CONTEXT_PATH is $JSONLD_CONTEXT_PATH"

            mkdir -p $OUTPUT_PATH_RESPEC
            cd model2owl
            ls -la
            echo "+++++++++++++++++prepare namespaces for ReSpec generation++++++++++++++++++++++++++++"
            # Generate enriched namespaces first (required for ReSpec generation)
            make gen-enriched-ns-file \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            echo "+++++++++++++++++generate ReSpec JSON data++++++++++++++++++++++++++++"
            # First generate the ReSpec JSON data file
            make respec-json \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_RESPEC \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            
            echo "+++++++++++++++++generate ReSpec documentation++++++++++++++++++++++++++++"
            # Then generate the complete ReSpec documentation
            make generate-respec \
              XMI_INPUT_FILE_PATH=../$CM_FILE_PATH \
              RESPEC_OUTPUT_DIR=../$OUTPUT_PATH_RESPEC \
              OUTPUT_FOLDER_PATH=../$OUTPUT_PATH_RESPEC \
              RESPEC_INPUT_ASSETS_DIR=${RESPEC_ASSETS_PATH} \
              RESPEC_DATA_JSON_PATH=../$OUTPUT_PATH_RESPEC/${implementation}_CM_respec.json \
              RESPEC_METADATA_JSON_PATH=${METADATA_JSON_PATH} \
              OWL_CORE_FILE_PATH=../$OWL_CORE_PATH \
              OWL_RESTR_FILE_PATH=../$OWL_RESTR_PATH \
              SHACL_SHAPES_FILE_PATH=../$SHACL_SHAPES_PATH \
              JSONLD_CONTEXT_FILE_PATH=../$JSONLD_CONTEXT_PATH \
              NAMESPACES_USER_XML_FILE_PATH=${NS_XML_FILE_PATH}
            echo "-------------------end ReSpec generation---------------------------------"

            sed -i "s/..\/implementation\/${implementation}\/model2owl-config/test\/ePO-default-config/g" config-proxy.xsl
            cd ..
          done
        shell: bash

      - name: remove unnecessary files
        run: |
          sudo rm -rf model2owl
        shell: bash

      - name: commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git pull
          git status

          git add .
          if [ -z "$(git status --porcelain)" ]; then
          echo "::set-output name=push::false"
          else
          git commit -m "Adding ReSpec documentation files"
          echo "::set-output name=push::true"
          fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}